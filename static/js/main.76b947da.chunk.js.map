{"version":3,"sources":["Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItems.js","Components/NewExpense/NewExpense.js","Components/Expenses/DropBox.js","Components/Expenses/ChartBar.js","Components/Expenses/Chart.js","App.js","index.js"],"names":["ExpenseDate","props","date","object2","id","className","toLocaleString","month","day","getFullYear","ExpenseItems","useState","object","title","Title","setTitle","Amount","amount","year","onClick","tit","prompt","NewExpense","setAmount","dDate","setDate","onSubmit","event","preventDefault","ExpenseData","Math","random","parseInt","Date","submitted","type","value","onChange","target","required","DropBox","onAlteration","ChartBar","height","maxValue","round","console","log","style","label","Chart","items","object_array","filter","expense","monthsValue","i","length","getMonth","itemValues","map","item","maxValueInYear","max","App","setYear","charges","setCharges","ExpenseDataFrom","prevExpenses","returnedElement","charge","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76b947da.chunk.js","sourcesContent":["function ExpenseDate(props){\r\n    const date = props.object2;\r\n    \r\n    return (\r\n        \r\n        <div id=\"fck\">\r\n            <div className='Date'>\r\n                <div>{date.toLocaleString('en-US', {month:'long'})}</div>\r\n                <div>{date.toLocaleString('en-US', {day:'2-digit'})}</div>\r\n                <div>{date.getFullYear()}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ExpenseDate;","import './ExpenseItems.css';\r\nimport react, {useState}  from 'react';\r\nimport ExpenseDate from './ExpenseDate.js';\r\nfunction ExpenseItems(props){\r\n    const [Title, setTitle] = useState(props.object.title);\r\n    const date = props.object.date;\r\n    const Amount = props.object.amount;\r\n    \r\n\r\n    // setTitle(Title);\r\n    const buttonHandler = () =>{\r\n        let tit = prompt('New Title : ');\r\n        setTitle(tit);\r\n    }\r\n    if(props.year==date.getFullYear()){\r\n      return (\r\n        <div className=\"expense-item\">\r\n            <div className=\"Description\">\r\n              \r\n              <ExpenseDate object2={date}></ExpenseDate>\r\n              <div className='Title'>{Title}</div>\r\n            </div>\r\n            <div className='fck'>\r\n                <div className=\"Amount\">${Amount}</div>\r\n                <button className='btn btn-success' onClick={buttonHandler}>Change Title</button>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n    else{\r\n      return (null);\r\n    }\r\n    \r\n}\r\nexport default ExpenseItems;","import './NewExpense.css';\r\nimport React,{useState} from 'react';\r\n\r\n\r\n\r\nfunction NewExpense(props){\r\n    const [Title, setTitle] = useState('');\r\n    const [Amount, setAmount] = useState('');\r\n    const [dDate, setDate] = useState('');\r\n\r\n    const TitleChangeHandler = (event) =>{\r\n        setTitle(event.target.value);\r\n    }\r\n    const AmountChangeHandler = (event) => {\r\n        setAmount(event.target.value);\r\n    }\r\n    const DateChangeHandler = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const SubmitHandler = (event) =>{\r\n        event.preventDefault();\r\n        const ExpenseData = {\r\n            id: Math.random(),\r\n            title: Title,\r\n            amount: parseInt(Amount),\r\n            date: new Date(dDate)\r\n        }\r\n        setTitle('');\r\n        setAmount('');\r\n        setDate('');\r\n        props.submitted(ExpenseData);\r\n\r\n\r\n\r\n    }\r\n    return(\r\n        <div id='input-field'>\r\n            <form onSubmit={SubmitHandler}>\r\n                <div className=\"Fields\">\r\n                    <label>Title</label>\r\n                    <input type='text' className='form-control' value={Title} id=\"Title\" onChange={TitleChangeHandler} required/>\r\n                </div>\r\n                <div className=\"Fields\">\r\n                    <label>Amount</label>\r\n                    <input type='number' className='form-control' value={Amount} id=\"Price\" onChange={AmountChangeHandler} required/>\r\n                </div>\r\n                <div className=\"Fields\">\r\n                    <label>Date</label>\r\n                    <input type='date'className='form-control' id=\"date\" value={dDate} onChange={DateChangeHandler} required/>\r\n                </div>\r\n                <div className=\"Fields\">\r\n                    <button className=\"btn btn-primary\"type='submit'>Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default NewExpense;","import './DropBox.css'\r\nfunction DropBox(props){\r\n    const DropBox_Changed =(event) =>{\r\n        props.onAlteration(event.target.value);\r\n    }\r\n    return (\r\n        <div className=\"Container DropBox\">\r\n            <select className='form-select' onChange={DropBox_Changed}>\r\n                <option value='None'>-Select-</option>\r\n                <option value='2019'>2019</option>\r\n                <option value='2020'>2020</option>\r\n                <option value='2021'>2021</option>\r\n                <option value='2022'>2022</option>\r\n\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\nexport default DropBox;\r\n","{/* <div className='ChartBar_fill'>\r\n<div className='Filled'>\r\n\r\n</div>\r\n</div>\r\n<div className='ChartLabel'>\r\n\r\n</div> */}\r\nconst ChartBar = (props) => {\r\n    let height = 0+'%';\r\n\r\n    if(props.maxValue>0){\r\n        height = Math.round((props.value/props.maxValue)*100)+'%';\r\n        console.log(props.maxValue);\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='ChartBar_fill'>\r\n                <div className='Filled' style={{height: height}}>\r\n\r\n                </div>\r\n            </div>\r\n            <div className='ChartLabel'>\r\n                <h4>{props.label}</h4>\r\n            </div>\r\n        </div>\r\n            \r\n    );\r\n}\r\nexport default ChartBar;","import  './Chart.css'\r\nimport ChartBar from './ChartBar.js'\r\nconst Chart = (props) => {\r\n    const items = props.object_array.filter((expense) => {\r\n        return expense.date.getFullYear()===parseInt(props.year);\r\n    }\r\n    );\r\n    const monthsValue = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n    \r\n    for(let i=0;i<items.length;i++){\r\n        const month = items[i].date.getMonth();\r\n        monthsValue[month].value += items[i].amount;\r\n    }\r\n    const itemValues = monthsValue.map(item => item.value);\r\n    const maxValueInYear = Math.max(...itemValues);\r\n    return (\r\n        <div className='container'>\r\n            <div className='Chart'>\r\n                {monthsValue.map(month => <ChartBar key={month.label} label={month.label} value={month.value} maxValue={maxValueInYear}/>)}\r\n                {/* <ChartBar />\r\n                <ChartBar />\r\n                <ChartBar />\r\n                <ChartBar />\r\n                <ChartBar />\r\n                <ChartBar />\r\n                <ChartBar />\r\n                <ChartBar />\r\n                <ChartBar />\r\n                <ChartBar />\r\n                <ChartBar />\r\n                <ChartBar /> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Chart;","import ExpenseItems from './Components/Expenses/ExpenseItems.js';\nimport NewExpense from './Components/NewExpense/NewExpense.js';\nimport DropBox from './Components/Expenses/DropBox.js'\nimport Chart from './Components/Expenses/Chart.js'\nimport { useState } from 'react';\nfunction App() {\n  const expenses = [\n    // {\n    //   id: '1',\n    //   title: 'Car Insurance',\n    //   amount: 287,\n    //   date: new Date(2021, 2, 5)\n    // },\n    // {\n    //   id: '2',\n    //   title: 'EMI',\n    //   amount: 219,\n    //   date: new Date(2021, 10, 5)\n    // },\n    // {\n    //   id:'3',\n    //   title: 'Investment',\n    //   amount: 100,\n    //   date: new Date(2021, 8, 5)\n    // },\n    // {\n    //   id: '4',\n    //   title: 'Date',\n    //   amount: 75,\n    //   date: new Date(2021, 10, 5)\n    // }\n  ]\n  const [year, setYear] = useState(2021);\n  const [charges, setCharges] = useState(expenses);\n  const submitted = (ExpenseDataFrom) => {\n    setCharges((prevExpenses) => {\n      return [ ExpenseDataFrom,  ...prevExpenses];\n    });\n  }\n  const Changed = (returnedElement) => {\n    setYear(returnedElement);\n  }\n  return (\n    <div>\n      <div className=\"container p2\">\n          <NewExpense submitted={submitted}/>\n      </div>\n      <Chart year={year} object_array={charges}/>\n      <div className='container'>\n        <DropBox onAlteration={Changed}/>\n        {\n          charges.map(charge => <ExpenseItems year={year} key={charge.id} object={charge}/>)\n        }\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}